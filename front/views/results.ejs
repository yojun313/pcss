<!DOCTYPE html>
<html lang="en">
<head>
  <link rel="icon" type="image/png" href="/favicon.png">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>PCSS Result</title>
  <style>
        /* 기본 라이트 모드 스타일 */
    body {
      font-family: Arial, sans-serif;
      margin: 10px;
      background-color: #f8f9fa;
      color: #333;
      font-size: 14px;
    }
    .container {
      padding: 10px; /* 여백 줄임 */
      background: #ffffff;
      border-radius: 6px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      overflow-x: auto;
      max-width: 1200px;
      margin: 0 auto;
    }
    h1 {
      text-align: center;
      font-size: 30px; /* 크기 줄임 */
      font-weight: bold;
      margin-bottom: 20px;
      color: #C80150;
    }

    /* 테이블 스타일 (검색 옵션 영역) */
    .options-table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      margin-bottom: 15px; /* 아래 여백 줄임 */
      background-color: #ffffff;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 6px;
      overflow: hidden;
    }
    .options-table th,
    .options-table td {
      padding: 8px;
      width: 50%;
      border: 1px solid #ddd;
    }
    .options-table th {
      background-color: #f2f2f2;
      color: #C80150;
      font-size: 16px;
      text-align: left;
    }
    .option-label {
      background-color: #fafafa;
      font-weight: bold;
    }

    /* 섹션 스타일 */
    .year-section, .conference-section {
      border: 1px solid #ddd;
      border-radius: 6px;
      background-color: #ffffff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
      margin-bottom: 8px; /* 간격 줄임 */
      padding: 6px;
    }
    .year-header, .conference-header {
      font-size: 13px;
      color: #C80150;
      font-weight: bold;
      padding: 4px 8px;
      background-color: #f2f2f2;
      cursor: pointer;
      display: flex;
      justify-content: flex-start;
      align-items: center;
    }
    .year-content, .conference-content {
      padding: 4px 6px;
      display: block;
    }

    /* 카드(논문) */
    .card {
      margin: 3px 0; /* 위아래 간격 줄임 */
      padding: 5px;  /* 내부 여백 줄임 */
      border: 1px solid #ddd;
      border-radius: 4px;
      background-color: #ffffff;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }
    .card-title {
      font-size: 13px; /* 조금 줄임 */
      font-weight: bold;
      color: #333;
      margin-bottom: 2px;
    }
    .meta-line {
      font-size: 12px;
      color: #555;
      margin-bottom: 4px;
    }
    .meta-line a {
      text-decoration: none;
      color: #C80150;
      margin-left: 5px;
    }
    .meta-line a:hover {
      text-decoration: underline;
    }

    .authors {
      list-style: none;
      padding: 0;
      margin: 2px 0;
      font-size: 12px;
    }
    .authors li {
      display: inline;
      margin-right: 5px;
    }
    .authors a,
    a.conference-link,
    a.author-link {
      text-decoration: none;
      color: #C80150;
    }
    .authors a:hover,
    a.conference-link:hover,
    a.author-link:hover {
      text-decoration: underline;
    }

    /* source 링크 */
    .paper-source-link {
      font-size: 12px;
      color: #0056b3;
      text-decoration: none;
    }
    .paper-source-link:hover {
      text-decoration: underline;
    }

    /* 메인 페이지 링크 */
    .main-link {
      text-align: center;
      margin: 15px auto 20px auto;
    }
    .main-link a {
      text-decoration: none;
      color: #C80150;
      font-weight: bold;
      font-size: 16px;
    }

    /* 반응형 디자인 */
    @media (max-width: 768px) {
      body {
        font-size: 12px;
      }
      .container {
        padding: 8px;
        max-width: 100%;
      }
      h1 {
        font-size: 22px;
      }
      .year-header, .conference-header {
        font-size: 12px;
        padding: 6px 8px;
      }
      .card-title {
        font-size: 12px;
      }
      .authors {
        font-size: 11px;
      }
    }

    /* Footer 스타일 */
    .footer {
      text-align: center;
      font-size: 12px;
      margin-top: 15px;
      padding: 8px 0;
      color: #666;
    }
    .footer-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 4px;
    }
    .footer-container p {
      margin: 0;
      font-weight: bold;
    }
    .user {
      display: flex;
      align-items: center;
      gap: 5px;
      font-size: 12px;
    }
    .user a {
      text-decoration: none;
      color: #007bff;
    }
    .user a:hover {
      text-decoration: underline;
    }

    /* 다크 모드 스타일 */
    @media (prefers-color-scheme: dark) {
      body {
        background-color: #121212;
        color: #e0e0e0;
      }
      .main-link a {
        color: #ff88a2;
      }
      .paper-source-link {
        color: #66ccff;
      }
      .container {
        background-color: #242424;
        box-shadow: 0 2px 6px rgba(0,0,0,0.8);
      }
      h1 {
        color: #ff88a2;
      }
      .options-table {
        background-color: #2c2c2c;
        color: #e0e0e0;
        border: 1px solid #444;
      }
      .options-table th,
      .options-table td {
        border-color: #444;
      }
      .options-table th {
        background-color: #3a3a3a;
        color: #ff88a2;
      }
      .option-label {
        background-color: #333;
        color: #e0e0e0;
      }
      .options-table td {
        background-color: #242424;
      }
      .year-section, .conference-section, .card {
        background-color: #333;
        border-color: #444;
        box-shadow: 0 2px 6px rgba(0,0,0,0.8);
      }
      .year-header, .conference-header {
        background-color: #3a3a3a;
        color: #ff88a2;
      }
      .card-title {
        color: #e0e0e0;
      }
      .authors a,
      a.conference-link,
      a.author-link {
        color: #ff88a2;
      }
      .user a {
        color: #4da6ff;
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <h1>PCSS Result</h1>
    
    <div class="main-link">
      <a href="http://pcss.r-e.kr:3000/">
        메인으로 돌아가기
      </a>
    </div>
    
    <% 
      // 옵션 번호를 설명 텍스트로 변환하는 함수
      function getOptionText(optionValue) {
        switch(optionValue) {
          case "1": return "1저자가 한국인";
          case "2": return "1저자 또는 2저자가 한국인";
          case "3": return "마지막 저자가 한국인";
          case "4": return "1저자 또는 마지막 저자가 한국인";
          case "5": return "저자 중 한 명 이상이 한국인";
          default: return "옵션 미선택";
        }
      }
    %>
    
    <!-- 검색 옵션을 테이블로 표시 -->
    <table class="options-table">
      <thead>
        <tr>
          <th colspan="2">검색 옵션</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="option-label">선택 옵션</td>
          <td><%= getOptionText(options.option) %></td>
        </tr>
        <tr>
          <td class="option-label">연도 범위</td>
          <td><%= options.startyear %> ~ <%= options.endyear %></td>
        </tr>
        <tr>
          <td class="option-label">한국인 판단 기준값(0.0-1.0)</td>
          <td><%= options.uncertainty %></td>
        </tr>
        <tr>
          <td class="option-label">저자별 총 논문 수</td>
          <td><%= options.CountOption %></td>
        </tr>
        <tr>
          <td class="option-label">선택 학회</td>
          <td><%= options.selectedConferences.join(', ') %></td>
        </tr>
      </tbody>
    </table>
    
    <div id="papers-container"></div>
    
    <script>
      // 헬퍼 함수: 토글 가능한 헤더 생성
      function createToggleHeader(text, headerClass) {
        const header = document.createElement("div");
        header.className = headerClass;
        header.innerHTML = text + '<span class="toggle-icon" style="margin-left:auto;">▼</span>';
        header.addEventListener("click", function() {
          const content = header.nextElementSibling;
          const icon = header.querySelector(".toggle-icon");
          if (!content.style.display || content.style.display === "none") {
            content.style.display = "block";
            icon.textContent = "▼";
          } else {
            content.style.display = "none";
            icon.textContent = "▶";
          }
        });
        return header;
      }
      
      // papers 변수는 서버에서 전달된 데이터
      const papers = <%- JSON.stringify(pythonResult) %>;
      const container = document.getElementById("papers-container");
      
      if (!papers || Object.keys(papers).length === 0) {
          alert("검색 조건을 만족하는 논문이 존재하지 않습니다.");
          container.innerHTML = `
              <div style="text-align:center; padding:20px; background:#fff4f4; border:1px solid #f5c2c2; border-radius:8px; color:#c71d1d;">
                  검색 조건을 만족하는 논문이 존재하지 않습니다.
              </div>`;
      } else {
          // 그룹화: target_author > year > conference
          const groupedPapers = {};
          for (const key in papers) {
              const paper = papers[key];
              paper.target_author.forEach(author => {
                  if (!groupedPapers[author]) groupedPapers[author] = {};
                  if (!groupedPapers[author][paper.year]) groupedPapers[author][paper.year] = {};
                  if (!groupedPapers[author][paper.year][paper.conference]) groupedPapers[author][paper.year][paper.conference] = [];
                  groupedPapers[author][paper.year][paper.conference].push(paper);
              });
          }
          const authorList = Object.keys(groupedPapers);

          // 2. 괄호 안의 숫자를 파싱하는 헬퍼 함수
          function getNumberInParentheses(str) {
            // 예: "William Won(0.2)" -> 0.2
            //     "Ni Kang(0.9)"     -> 0.9
            const match = str.match(/\(([\d.]+)\)/);
            if (match) {
              return parseFloat(match[1]);
            }
            return 0;
          }

          // 3. 괄호 안 숫자를 기준으로 내림차순 정렬
          authorList.sort((a, b) => {
            return getNumberInParentheses(b) - getNumberInParentheses(a);
          });
          
          // 각 저자별 섹션 생성
          for (const author of authorList) {
              const authorSection = document.createElement("div");
              authorSection.className = "year-section";
              
              // 저자 헤더 생성
              const authorHeader = document.createElement("div");
              authorHeader.className = "year-header";
              
              // 저자 문자열에서 이름과 괄호 부분 분리
              const bracketIndex = author.indexOf('(');
              let nameOnly = author, bracketPart = '';
              if (bracketIndex !== -1) {
                  nameOnly = author.substring(0, bracketIndex).trim();
                  bracketPart = author.substring(bracketIndex);
              }
              
              // 첫 번째 논문 데이터를 참조하여 저자 URL 결정
              const firstYear = Object.keys(groupedPapers[author])[0];
              const firstConference = Object.keys(groupedPapers[author][firstYear])[0];
              const referencePaper = groupedPapers[author][firstYear][firstConference][0];
              let targetAuthorUrl = '#';
              if (referencePaper.author_name && referencePaper.author_url) {
                  const matchedIndex = referencePaper.author_name.findIndex(n => n.includes(nameOnly));
                  if (matchedIndex !== -1) {
                      targetAuthorUrl = referencePaper.author_url[matchedIndex];
                  }
              }
              
              // 저자 이름을 링크로 변환 (콤마 구분된 경우 처리)
              const authorsArray = author.split(',').map(a => a.trim());
              const linkHtmls = authorsArray.map(authorStr => {
                  const idx = authorStr.indexOf('(');
                  let nameOnlyInner = authorStr, bracketPartInner = '';
                  if (idx !== -1) {
                      nameOnlyInner = authorStr.substring(0, idx).trim();
                      bracketPartInner = authorStr.substring(idx);
                  }
                  let authorUrl = '#';
                  if (referencePaper.author_name && referencePaper.author_url) {
                      const i = referencePaper.author_name.findIndex(n => n.includes(nameOnlyInner));
                      if (i !== -1) authorUrl = referencePaper.author_url[i];
                  }
                  return `<a href="${authorUrl}" class="author-link" target="_blank">${nameOnlyInner}</a>${bracketPartInner}`;
              });
              
              authorHeader.innerHTML = `${linkHtmls.join(', ')}<span class="toggle-icon" style="margin-left:auto;">▼</span>`;
              // 토글 기능 이벤트 추가
              authorHeader.addEventListener("click", () => {
                  const content = authorSection.querySelector(".year-content");
                  const icon = authorHeader.querySelector(".toggle-icon");
                  if (!content.style.display || content.style.display === "none") {
                      content.style.display = "block";
                      icon.textContent = "▼";
                  } else {
                      content.style.display = "none";
                      icon.textContent = "▶";
                  }
              });
              
              const authorContent = document.createElement("div");
              authorContent.className = "year-content";
              
              // 연도별 섹션 생성
              for (const year in groupedPapers[author]) {
                  const yearSection = document.createElement("div");
                  yearSection.className = "conference-section";
                  
                  // 연도 헤더: toggle 기능 추가
                  const yearHeaderEl = createToggleHeader(`${year}`, "conference-header");
                  yearSection.appendChild(yearHeaderEl);
                  
                  const yearContent = document.createElement("div");
                  yearContent.className = "conference-content";
                  
                  // 학회별 섹션 생성
                  for (const conference in groupedPapers[author][year]) {
                      const conferenceSection = document.createElement("div");
                      conferenceSection.className = "conference-section";
                      
                      const conferenceHeader = document.createElement("div");
                      conferenceHeader.className = "conference-header";
                      conferenceHeader.innerHTML = `<span class="conference-link">${conference}</span>`;
                      // 토글 아이콘 추가
                      const confToggleIcon = document.createElement("span");
                      confToggleIcon.className = "toggle-icon";
                      confToggleIcon.style.marginLeft = "auto";
                      confToggleIcon.textContent = "▼";
                      conferenceHeader.appendChild(confToggleIcon);
                      confToggleIcon.addEventListener("click", (event) => {
                        event.preventDefault();
                        event.stopPropagation();
                        const content = conferenceSection.querySelector(".conference-content");
                        if (!content.style.display || content.style.display === "none") {
                            content.style.display = "block";
                            confToggleIcon.textContent = "▼";
                        } else {
                            content.style.display = "none";
                            confToggleIcon.textContent = "▶";
                        }
                      });
                      
                      const conferenceContent = document.createElement("div");
                      conferenceContent.className = "conference-content";
                      
                      groupedPapers[author][year][conference].forEach(paper => {
                        const card = document.createElement("div");
                        card.className = "card";

                        // 1) 메타 한 줄: "2025 – ISCA (DBLP)"
                        const meta = document.createElement("div");
                        meta.className = "paper-meta";

                        // source 라벨을 도메인별로 보기 좋게
                        let sourceLabel = "Source";
                        try {
                          const host = new URL(paper.source || "#").hostname;
                          if (/dblp/i.test(host)) sourceLabel = "DBLP";
                          else if (/arxiv/i.test(host)) sourceLabel = "arXiv";
                        } catch (e) {}
                        const srcA = document.createElement("a");
                        srcA.href = paper.source || "#";
                        srcA.target = "_blank";
                        srcA.textContent = `(${sourceLabel})`;

                        // "연도 – 학회" + (source)
                        const metaText = document.createTextNode(`${paper.year} – ${conference} `);
                        meta.appendChild(metaText);
                        meta.appendChild(srcA);
                        card.appendChild(meta);

                        // 2) 제목
                        const titleEl = document.createElement("div");
                        titleEl.className = "card-title";
                        titleEl.textContent = paper.title;
                        card.appendChild(titleEl);

                        // 3) 저자 (콤팩트하게)
                        const authorsList = document.createElement("div");
                        authorsList.className = "authors";
                        paper.author_name.forEach((a, index) => {
                          const link = document.createElement("a");
                          link.href = paper.author_url[index] || "#";
                          link.textContent = a;
                          link.target = "_blank";
                          authorsList.appendChild(link);
                          if (index < paper.author_name.length - 1) {
                            authorsList.appendChild(document.createTextNode(', '));
                          }
                        });
                        card.appendChild(authorsList);

                        // 최종 추가
                        conferenceContent.appendChild(card);
                      });


                      
                      conferenceSection.appendChild(conferenceHeader);
                      conferenceSection.appendChild(conferenceContent);
                      yearContent.appendChild(conferenceSection);
                  }
                  
                  yearSection.appendChild(yearContent);
                  authorContent.appendChild(yearSection);
              }
              
              authorSection.appendChild(authorHeader);
              authorSection.appendChild(authorContent);
              container.appendChild(authorSection);
          }
      }
    </script>
  </div>
  <footer class="footer">
    <div class="footer-container">
      <p>Created By</p>
      <div class="user">
        <a href="https://github.com/yojun313" target="_blank">Yojun Moon</a>
        <a href="mailto:yojun313@postech.ac.kr">(yojun313@postech.ac.kr)</a> | 
        <a href="https://www.psal.postech.ac.kr/gkim" target="_blank">Gwangsun Kim</a>
        <a href="mailto:g.kim@postech.ac.kr">(g.kim@postech.ac.kr)</a>
      </div>
    </div>
  </footer>
</body>
</html>
